#!/usr/bin/env node
import{createRequire as $}from"node:module";var P=$(import.meta.url);import{promises as Q}from"node:fs";function N(j){return j.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}async function S(j,E){let A=await Q.readFile(j,"utf8"),O=JSON.parse(A),G={};for(let H of O.diagnostics){let z=H.location?.path?.file;if(!z)continue;if(!G[z])G[z]=[];G[z].push(H)}let D='<?xml version="1.0" encoding="utf-8"?><checkstyle version="4.3">';for(let[H,z]of Object.entries(G)){D+=`<file name="${N(H)}">`;for(let K of z){let U=N(K.severity||"error"),V=N(K.message?.map((Z)=>Z.content).join(" ")||K.description||""),Y=N(K.category||"biome");D+=`<error line="1" column="1" severity="${U}" message="${V}" source="${Y}" />`}D+="</file>"}D+="</checkstyle>",await Q.writeFile(E,D,"utf8")}var q=S;if(P.main==P.module||import.meta&&P.main==P.module){let j=process.argv.slice(2);if(j.length!==2)console.error("Usage: biome-json-to-checkstyle <input.json> <output.xml>"),process.exit(1);let E=j[0],A=j[1];if(!E||!A)console.error("Input and output file names are required."),process.exit(1);S(E,A).then(()=>{console.log(`${A} written!`)}).catch((O)=>{console.error(O),process.exit(1)})}export{q as default};
